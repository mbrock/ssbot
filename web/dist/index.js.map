{
  "version": 3,
  "sources": ["../index.js"],
  "sourcesContent": ["//\n// Tau Prolog is loaded in the browser.\n//\n// The following code is executed when the page is loaded.\n//\n// It starts a WebSocket client that connects to the server.\n//\n// The server is the SWI-Prolog HTTP server.\n//\n// The server can send a Prolog query to the client,\n// which executes the query and sends the result back.\n//\n\nlet prolog = pl.create(1000)\n\nlet webSocketProtocol = (\n  location.protocol == \"https:\" ? \"wss:\" : \"ws:\")\nlet webSocketURL = `${webSocketProtocol}//${location.host}/ws`\nlet webSocket = new WebSocket(webSocketURL)\n\nwebSocket.onmessage = async event => {\n  let { goal, id } = JSON.parse(event.data)\n  console.log(\"query \" + id + \": \" + goal)\n  try {\n    await prolog.queryPromise(goal)\n    for await (let answerObject of prolog.promiseAnswers()) {\n      let answer = prolog.format_answer(answerObject)\n      webSocket.send(JSON.stringify({ id, answer }))\n    }\n    console.log(\"done \" + id)\n    webSocket.send(JSON.stringify({ id, done: true }))\n  } catch (error) {\n    console.log(\"error \" + id + \": \" + error)\n    webSocket.send(JSON.stringify({ id, error: error.message }))\n  }\n}\n\nwebSocket.onclose = event => {\n  console.log(\"WebSocket closed\")\n}\n\nwebSocket.onerror = event => {\n  console.log(\"WebSocket error\")\n}\n\n"],
  "mappings": ";;AAaA,MAAI,SAAS,GAAG,OAAO,GAAI;AAE3B,MAAI,oBACF,SAAS,YAAY,WAAW,SAAS;AAC3C,MAAI,eAAe,GAAG,sBAAsB,SAAS;AACrD,MAAI,YAAY,IAAI,UAAU,YAAY;AAE1C,YAAU,YAAY,OAAM,UAAS;AACnC,QAAI,EAAE,MAAM,GAAG,IAAI,KAAK,MAAM,MAAM,IAAI;AACxC,YAAQ,IAAI,WAAW,KAAK,OAAO,IAAI;AACvC,QAAI;AACF,YAAM,OAAO,aAAa,IAAI;AAC9B,qBAAe,gBAAgB,OAAO,eAAe,GAAG;AACtD,YAAI,SAAS,OAAO,cAAc,YAAY;AAC9C,kBAAU,KAAK,KAAK,UAAU,EAAE,IAAI,OAAO,CAAC,CAAC;AAAA,MAC/C;AACA,cAAQ,IAAI,UAAU,EAAE;AACxB,gBAAU,KAAK,KAAK,UAAU,EAAE,IAAI,MAAM,KAAK,CAAC,CAAC;AAAA,IACnD,SAAS,OAAP;AACA,cAAQ,IAAI,WAAW,KAAK,OAAO,KAAK;AACxC,gBAAU,KAAK,KAAK,UAAU,EAAE,IAAI,OAAO,MAAM,QAAQ,CAAC,CAAC;AAAA,IAC7D;AAAA,EACF;AAEA,YAAU,UAAU,WAAS;AAC3B,YAAQ,IAAI,kBAAkB;AAAA,EAChC;AAEA,YAAU,UAAU,WAAS;AAC3B,YAAQ,IAAI,iBAAiB;AAAA,EAC/B;",
  "names": []
}
